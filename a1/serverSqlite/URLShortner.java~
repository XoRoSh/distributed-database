import java.io.File;
import java.io.IOException;
import java.net.ServerSocket;
import java.util.Date;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.io.BufferedReader;
import java.io.FileReader;

public class URLShortner { 
	
	static final File WEB_ROOT = new File(".");
	static final String DEFAULT_FILE = "index.html";
	static final String FILE_NOT_FOUND = "404.html";
	static final String METHOD_NOT_SUPPORTED = "not_supported.html";
	static final String REDIRECT_RECORDED = "redirect_recorded.html";
	static final String REDIRECT = "redirect.html";
	static final String NOT_FOUND = "notfound.html";
	static URLShortnerDB database=null;
	static String hostname = "";
	static String replicateName = "";
	static final String path = "../orchestration/hosts";
	// port to listen connection
	static final int PORT = 1973;
	
	// verbose mode
	static final boolean verbose = false;

	public static void main(String[] args) {
		initializeHostname();
		initializeReplicaName();

		database = new URLShortnerDB();
		try {
			ServerSocket serverConnect = new ServerSocket(PORT);
			System.out.println("Server started.\nListening for connections on port : " + PORT + " ...\n");
			
			// we listen until user halts server execution
			while (true) {
				if (verbose) { System.out.println("Connecton opened. (" + new Date() + ")"); }
				new URLShortnerThread(serverConnect.accept()).start();
			}
		} catch (IOException e) {
			System.err.println("Server Connection error : " + e.getMessage());
		}
	}

	public static void initializeHostname() {
		try {
			InetAddress inetAddress = InetAddress.getLocalHost();
			URLShortner.hostname = inetAddress.getHostName();

		} catch (UnknownHostException e) {
			e.printStackTrace();
		}
	}

	public static void initializeReplicaName() {
		try (BufferedReader reader = new BufferedReader(new FileReader(path))) {
			String host, first = null;
			while ((host = reader.readLine()) != null) {
				if (first == null) first = host;
				if (host.equals(hostname)) {
					replicateName = reader.readLine();
					if (replicateName == null) replicateName = first;
				}
			}
			if (verbose) System.out.println("THIS: " + hostname + " has REPLICA: " + replicateName);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
